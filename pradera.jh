application {
  config {
    applicationType monolith
    authenticationType jwt
    baseName pradera
    blueprints []
    buildTool gradle
    cacheProvider ehcache
    clientFramework react
    clientPackageManager npm
    clientTheme none
    creationTimestamp 1617117668227
    databaseType sql
    devDatabaseType h2Disk
    dtoSuffix DTO
    embeddableLaunchScript false
    enableHibernateCache true
    enableSwaggerCodegen true
    enableTranslation true
    jhiPrefix jhi
    jwtSecretKey "NmEzOWE0YWNhZGNkNmMzN2U3Y2VjNzE3MjE4NWFlYTgwZmY1MzFmMmZjNjIwZjRmMDdjMjA0ODIyZjI0YzgxNWM5NjZlNmFhMjczYmQwYzE4ODEwMzNiMTMwMmE5Y2NkZDEwMGFjMDIwYjYzYWMzZjNiYzJkOWRiNDliNzIxMDA="
    languages [en, es]
    messageBroker false
    nativeLanguage en
    otherModules []
    packageName com.pradera.poc
    prodDatabaseType postgresql
    serverPort 8080
    serviceDiscoveryType false
    skipClient false
    skipServer false
    skipUserManagement false
    testFrameworks [cypress]
    websocket spring-websocket
  }

  entities Block, Flow, Book, FlowBlock
}

entity Book {
  title String required minlength(3)
}
enum BlockType {
  TITLE,
  PARAGRAPH,
  CHAPTER
}
entity Block {
  type BlockType required,
  content TextBlob required,
  createdDate ZonedDateTime required,
  hash String required
}
entity Flow {
  name String required minlength(3)
}
entity FlowBlock {
  blockOrder Long required
}

relationship ManyToOne {
  Block{parent(content)} to Block{parentBlocks},
  Block{user(login) required} to User,
  Flow{user(login)} to User,
  Flow{book(title)} to Book,
  FlowBlock{flow} to Flow{blocks},
  FlowBlock{block} to Block{flows},
}


paginate Block, Flow, Book, FlowBlock with pagination
service Block, Flow, Book, FlowBlock with serviceClass
filter Block, Flow, Book, FlowBlock
